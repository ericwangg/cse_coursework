"Lab 12 - Eric Wang"

;; stream primitives
(define-syntax cons-stream
  (syntax-rules ()
    ((cons-stream head tail)
     (cons head (delay tail)))))

(define (stream-car x)
  (car x))

(define (stream-cdr x)
  (force (cdr x)))

(define empty-stream? null?)

;; utiity for tracing function calls 
(define (tracer name . values)
  ;  usage: if at start of function defined (foo a b c)
  ;  put in (tracer 'foo a b c)
  ;  interesting to put into something that is delayed
  (define (display-spaced item)
    (display item)
    (display " "))
  (display-spaced name)
  (display-spaced "with parameter(s):")
  (for-each display-spaced values)
  (newline))
;;;;;;;;;;;;;;;;

(define (enumerate-integers-from a)
  (cons-stream
   a
   (enumerate-integers-from (+ a 1))))

(define test2 (enumerate-integers-from 1))
(stream-car test2)
(stream-car (stream-cdr test2))
test2
(stream-cdr test2 )


